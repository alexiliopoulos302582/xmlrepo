// <auto-generated />
using System;
using InvoiceApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceApp.Migrations
{
    [DbContext(typeof(ChaniaContext))]
    [Migration("20241031181035_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("InvoiceApp.Models.ChaniaCustomer", b =>
                {
                    b.Property<int>("ChaniaCustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ChaniaCustomerID"));

                    b.Property<string>("ChaniaAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChaniaCityName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChaniaCountryCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChaniaEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChaniaFullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChaniaPostCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChaniaTaxID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ChaniaCustomerID");

                    b.ToTable("ChaniaCustomers");
                });

            modelBuilder.Entity("InvoiceApp.Models.ChaniaInvoice", b =>
                {
                    b.Property<string>("ChaniaDocID")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("ChaniaDocAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChaniaDocCurrency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ChaniaDocDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ChaniaDocNumber")
                        .HasColumnType("int");

                    b.Property<string>("ChaniaDocType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("ChaniaIsReversal")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ChaniaDocID");

                    b.ToTable("ChaniaInvoices");
                });

            modelBuilder.Entity("InvoiceApp.Models.ChaniaTransaction", b =>
                {
                    b.Property<int>("ChaniaTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ChaniaTransactionId"));

                    b.Property<decimal>("ChaniaAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChaniaCurrency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChaniaDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChaniaDocID")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ChaniaGLAccount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ChaniaTranType")
                        .HasColumnType("int");

                    b.HasKey("ChaniaTransactionId");

                    b.HasIndex("ChaniaDocID");

                    b.ToTable("ChaniaTransactions");
                });

            modelBuilder.Entity("InvoiceApp.Models.ChaniaTransaction", b =>
                {
                    b.HasOne("InvoiceApp.Models.ChaniaInvoice", "ChaniaInvoice")
                        .WithMany("ChaniaTransactions")
                        .HasForeignKey("ChaniaDocID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChaniaInvoice");
                });

            modelBuilder.Entity("InvoiceApp.Models.ChaniaInvoice", b =>
                {
                    b.Navigation("ChaniaTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
